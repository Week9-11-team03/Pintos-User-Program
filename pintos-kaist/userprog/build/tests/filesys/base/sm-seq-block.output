Kernel command line: -q -f put sm-seq-block run sm-seq-block
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 313 sector (156 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 107 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'sm-seq-block' into the file system...
Executing 'sm-seq-block':
(sm-seq-block) begin
(sm-seq-block) create "noodle"
(sm-seq-block) open "noodle"
(sm-seq-block) writing "noodle"
Page fault at 0x423c040: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at rip=800421e6f5
 cr2=000000000423c040 error=               0
rax 000000000423c038 rbx 0000000000000000 rcx 000000800421e6de rdx 0000000000000201
rsp 0000008004240e70 rbp 0000008004240ea0 rsi 0000000000604f00 rdi 000000000423c038
rip 000000800421e6f5 r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000202 r12 000000800421ce0d r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000202
es: 001b ds: 001b cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x8004217fcd 0x800421cb58 0x800421ccd7 0x8004208e5b 0x8004209279 0x800421d0a2 0x800421cf57 0x800421cd4c 0x400d07 0x400131 0x400e1a 0x400e63.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 65 ticks
Thread: 34 idle ticks, 26 kernel ticks, 5 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 107 reads, 266 writes
hd1:0: 107 reads, 0 writes
Console: 1874 characters output
Key